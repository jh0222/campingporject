<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fi.pj.shopping.ShoppingMapper">
<!-- 상품목록(페이징)  -->
<select id="getAllProduct" resultType="com.fi.pj.shopping.Product" parameterType="com.fi.pj.shopping.Page">
	select rn,p_no,p_name,p_price,p_picture,p_txt
        from (select Rownum as rn,p_no,p_name,p_price,p_picture,p_txt
        from (select p_no,p_name,p_price,p_picture,p_txt
        from product_registration_table
        order by p_no desc))
        where RN &gt;=#{from} and RN &lt;=#{to}
</select>

<!-- 상품등록 -->
<insert id="regProduct" parameterType="com.fi.pj.shopping.Product">
	insert into product_registration_table(p_no,p_name,p_price,p_picture,p_txt)
	values (product_registration_table_seq.nextval,#{p_name},#{p_price},#{p_picture},#{p_txt})
</insert>

<!-- 상품검색  -->
<select id="ProductSearch" resultType="com.fi.pj.shopping.Product"> 
	select * from product_registration_table where p_name like '%'||#{p_name}||'%'
</select>
<!-- 상품디테일 -->
<select id="getProduct" resultType="com.fi.pj.shopping.Product">
	select * from product_registration_table where p_no = #{p_no}
</select>

<!-- 상품삭제 -->
<delete id="delProduct" parameterType="com.fi.pj.shopping.Product">
	delete product_registration_table where p_no = #{p_no}
</delete>

<!-- 상품수정 -->
<update id="updateProduct" parameterType="com.fi.pj.shopping.Product" >
 update product_registration_table
  set
   p_picture = #{p_picture},
   p_name = #{p_name},
   p_price = #{p_price},
   p_txt = #{p_txt}
  where p_no = #{p_no}
</update>

<!-- 리뷰목록 -->
<select id="getAllProductReview" resultType="com.fi.pj.shopping.ProductReview" parameterType="String">
 		select * from product_review_table where pr_p_no = #{pr_p_no} order by pr_no DESC
<!--  select * from product_review_table where pr_p_no = #{value} order by pr_no DESC-->
</select>

<!-- 리뷰등록:(구매계정)쿼리 -->
<select id="Productreview_id_select" parameterType="com.fi.pj.shopping.Reviewinsert" resultType="Integer" >
	select count(*) from guest_product_buy_table where b_u_bo_id = #{id} and b_p_no = #{p_no} <!-- 캠핑용품 구매목록에 id&상품no가 있으면 리뷰등록가능하도록 예)id:kim <-> p_no:142-->
</select>

<!-- 리뷰등록 -->
<insert id="regProductreview" parameterType="com.fi.pj.shopping.ProductReview">
	insert into product_review_table(pr_no,pr_p_no,pr_u_bo_id,pr_txt,pr_date) values (product_review_seq.nextval,#{pr_p_no},#{pr_u_bo_id}, #{pr_txt}, sysdate)
</insert>

<!-- 리뷰삭제 -->
<delete id="delProductreview" parameterType="com.fi.pj.shopping.ProductReview">
	delete product_review_table where pr_no = #{pr_no}
</delete>

<!-- 리뷰수정 -->
<update id="updateProductreview" parameterType="com.fi.pj.shopping.ProductReview">
	update product_review_table set pr_txt = #{pr_txt} where pr_no= #{pr_no}
</update>

<!-- 장바구니 등록 -->
<insert id="regProductbasket" parameterType="com.fi.pj.shopping.ProductBasket" >
	insert into guest_product_basket_table (ba_no,ba_p_no,ba_u_bo_id,ba_p_name,ba_p_picture,ba_price,ba_number)
	values (product_basket_seq.nextval,#{ba_p_no},#{ba_u_bo_id},#{ba_p_name},#{ba_p_picture},#{ba_price},#{ba_number})
</insert>

<!-- 상품구매(등록) -->
<insert id="regProductbuy" parameterType="com.fi.pj.shopping.ProductBuy" > <!-- jdbcType=VARCHAR는 null값 허용해주는 테이블이 있을때 쓰임 -->
	insert into guest_product_buy_table (b_no,b_u_bo_id,b_p_no,b_p_name,b_price,b_number,b_u_address,b_new_address,b_date)
	values (g_p_buy_seq.nextval,#{b_u_bo_id,jdbcType=VARCHAR},#{b_p_no,jdbcType=VARCHAR},#{b_p_name,jdbcType=VARCHAR},#{b_price,jdbcType=VARCHAR},#{b_number,jdbcType=VARCHAR},#{b_u_address,jdbcType=VARCHAR},#{b_new_address,jdbcType=VARCHAR},sysdate)
</insert>
<!-- 상품게시물 수(페이징) -->
<select id="getAllProductcnt" resultType="Integer">
	select count(*) from product_registration_table
</select>

</mapper>